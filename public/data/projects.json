{
    "projects": [{
        "id":1,
        "title": "Encriptador - ONE",
        "overview": "Página frontend para encriptar y desencriptar texto, desarrollado en el programa Oracle Next Education en Alura.",
        "content": "<h2>Descripción del Proyecto</h2><p>Este proyecto formó parte de un ejercicio práctico en el programa de <a href=\"https://www.oracle.com/ar/education/oracle-next-education/\" target=\"_blank\" rel=\"noreferrer\">Oracle Next Education</a>, impartido en la plataforma de <a href=\"https://www.aluracursos.com/\" target=\"_blank\" rel=\"noreferrer\">Alura</a>. El objetivo principal era desarrollar una <strong>aplicación de encriptación de texto</strong> utilizando tecnologías frontend como <strong>HTML, CSS y JavaScript</strong>. A través de este proyecto, tuve la oportunidad de aplicar y fortalecer mis conocimientos en <strong>manipulación del DOM</strong> y lógica en JavaScript.</p><p>La tarea inicial consistía en implementar un encriptador que transformara las vocales de un texto según un criterio específico. Este desafío me permitió no solo practicar conceptos fundamentales de <strong>programación</strong>, sino también explorar diferentes enfoques para <strong>manipular el texto</strong> y la estructura del DOM de manera eficiente.</p><h2>Funcionalidades Adicionales</h2><p>Más allá de la encriptación básica, decidí expandir el proyecto incorporando funcionalidades que mejoran la experiencia del usuario. Implementé un <strong>historial de encriptaciones</strong>, almacenado en la caché del navegador mediante <code>localStorage</code>. Esto permite al usuario consultar un registro de todas las palabras o frases encriptadas durante la sesión, ofreciendo una forma sencilla de gestionar y revisar el trabajo realizado.</p><p>Otra mejora significativa fue la adición de una funcionalidad para <strong>copiar automáticamente el texto encriptado o desencriptado al portapapeles</strong> con un solo clic. Esta característica no solo agiliza el proceso de uso de la herramienta, sino que también mejora la <strong>usabilidad</strong> general de la aplicación.</p><h2>Conclusión</h2><p>Este proyecto representó una excelente oportunidad para profundizar en mis habilidades de <strong>desarrollo frontend</strong>, especialmente en un contexto donde mi enfoque principal en el programa ha sido el <strong>desarrollo backend</strong>. La creación y mejora de esta herramienta no solo me permitió consolidar mis conocimientos técnicos, sino que también fomentó mi capacidad para implementar soluciones creativas a problemas comunes en el desarrollo web.</p><p>Además, la experiencia me brindó la oportunidad de <strong>colaborar</strong> estrechamente con otros estudiantes del curso. Este intercambio fue invaluable para mejorar mis habilidades de <strong>trabajo en equipo</strong> y me permitió compartir y adquirir conocimientos, lo que enriqueció aún más mi proceso de aprendizaje.</p>",
        "images": [],
        "poster": "images/encriptador/poster.png",
        "date":"2023-08-14",
        "page": "https://encriptador-one.netlify.app/",
        "repository": "https://github.com/KevinStockmanns/Encriptador--Oracle-Next-Education-",
        "tags": {
            "tech": [1,2,3],
            "tags": [1,2]
        },
        "status": "Publicado",
        "color" : "#0a3871"
    },{
        "id":2,
        "title": "WeatherApp",
        "overview": "Aplicación web que utiliza una API pública para ofrecer información detallada del clima en cualquier lugar del mundo, con una interfaz sencilla y fácil de usar.",
        "content": "<h2>Descripción del Proyecto</h2><p> WeatherApp es una aplicación frontend desarrollada con <strong>Angular</strong> y <strong>TypeScript</strong>. El propósito principal de esta aplicación es permitir a los usuarios obtener información básica sobre el clima actual en una ubicación específica. Utiliza la API pública de <a href=\"https://openweathermap.org/\" target=\"_blank\" rel=\"noreferrer\">OpenWeather</a> para obtener datos meteorológicos en tiempo real.</p><p> Los usuarios pueden ingresar una ubicación manualmente a través del teclado o utilizar la función de geolocalización para obtener automáticamente las coordenadas y recibir información precisa del clima actual en su área. Este proyecto me permitió aplicar y fortalecer mis conocimientos en el desarrollo con <strong>Angular</strong>, particularmente en el consumo de APIs y la gestión de datos en tiempo real.</p><h2>Funcionalidades</h2><p>Además de las funcionalidades básicas para consultar el clima, decidí agregar mejoras que optimizan la experiencia del usuario. Por ejemplo, la aplicación permite alternar entre diferentes unidades de medida (Celsius y Fahrenheit) para la temperatura, lo que facilita el uso a un público más amplio. También implementé una función de actualización automática que actualiza los datos meteorológicos a intervalos regulares, asegurando que la información sea siempre precisa y actualizada.</p><h2>Conclusión</h2><p>El desarrollo de WeatherApp representó una excelente oportunidad para profundizar en mis habilidades de <strong>desarrollo frontend</strong> con <strong>Angular</strong>. La integración con la API de OpenWeather y la implementación de funcionalidades como la geolocalización y el almacenamiento en <code>localStorage</code> me permitieron consolidar mis conocimientos en tecnologías modernas de desarrollo web.</p><p>Además, este proyecto me brindó la oportunidad de mejorar mis habilidades en <strong>TypeScript</strong> y de enfrentar desafíos técnicos, como el manejo de datos asincrónicos y la interacción con servicios externos. La experiencia de desarrollar esta aplicación fue altamente enriquecedora y me ha preparado para abordar proyectos más complejos en el futuro.</p>",
        "images": [],
        "poster": "images/weather-app/poster.png",
        "date":"2023-08-16",
        "page": "https://weather-app-kev.netlify.app/",
        "repository": "https://github.com/KevinStockmanns/weather-app",
        "tags": {
            "tech": [1,2,9,8],
            "tags": [1,2]
        },
        "status": "Publicado",
        "color" : "#0a3871"
    },{
        "id":3,
        "title": "Movie Link",
        "overview": "Plataforma web interactiva que se conecta a una API pública para ofrecer un catálogo de películas con detalles extensos sobre cada título.",
        "content": "<h2>Descripción del Proyecto</h2><p>Movie Link es una aplicación frontend desarrollada con <strong>Angular</strong> que permite a los usuarios explorar un amplio catálogo de <strong>películas, series, TV shows y actores</strong>. El objetivo principal de la aplicación es ofrecer una experiencia de navegación intuitiva y rica en contenido, donde los usuarios puedan descubrir tanto producciones populares como detalles sobre sus actores favoritos. La aplicación se integra con la API pública de <a href=\"https://developer.themoviedb.org/docs/getting-started\" target=\"_blank\" rel=\"noreferrer\">The Movie Database (TMDb)</a>, permitiendo el acceso a datos actualizados y precisos sobre el mundo del entretenimiento. Además, utiliza herramientas avanzadas de Angular como <strong>ViewTransitions</strong> para mejorar la experiencia de usuario con transiciones suaves entre vistas.</p><p>En la pantalla principal, la aplicación muestra una galería o visualizador de las producciones más destacadas en la parte superior, lo que permite al usuario ver rápidamente el contenido más popular. Además, los usuarios pueden buscar actores, películas o series específicas mediante una barra de búsqueda que procesa queries y devuelve resultados relevantes de manera instantánea.</p><h2>Funcionalidades</h2><p>Movie Link incluye una serie de funcionalidades que mejoran la usabilidad y personalización de la experiencia del usuario:</p><ul><li><strong>Visualizador de contenido:</strong> En el header de la aplicación, los usuarios pueden visualizar una galería con las películas, series y TV shows más populares del momento.</li>  <li><strong>Búsqueda avanzada:</strong> La barra de búsqueda permite a los usuarios buscar por query, encontrando rápidamente actores, películas o series según sus intereses específicos.</li>  <li><strong>Gestión de favoritos:</strong> Los usuarios pueden marcar películas, series o actores como favoritos, y esta información se almacena internamente en <code>localStorage</code>, permitiendo un acceso fácil y rápido a su contenido preferido.</li><li><strong>Transiciones fluidas:</strong> Aprovechando las capacidades de <strong>Angular</strong>, se implementaron <strong>ViewTransitions</strong> que permiten una experiencia de navegación suave y visualmente atractiva, mejorando la interacción del usuario con la aplicación.</li></ul><h2>Conclusión</h2><p>  El desarrollo de Movie Link fue una oportunidad significativa para aplicar y ampliar mis habilidades en <strong>desarrollo frontend</strong> con <strong>Angular</strong>. La integración con la API de <a href=\"https://developer.themoviedb.org/docs/getting-started\" target=\"_blank\" rel=\"noreferrer\">TMDb</a> y la implementación de herramientas como <strong>ViewTransitions</strong>, junto con la gestión de favoritos usando <code>localStorage</code>, me permitió crear una aplicación no solo funcional, sino también enfocada en ofrecer una excelente experiencia de usuario.</p><p>Además, trabajar en este proyecto me brindó la oportunidad de abordar desafíos técnicos relacionados con la búsqueda y presentación de grandes volúmenes de datos, así como de perfeccionar mis habilidades en la creación de interfaces de usuario dinámicas y responsivas. Movie Link es un reflejo de mi compromiso con el desarrollo de aplicaciones web de alta calidad, y me ha preparado para enfrentar proyectos aún más complejos en el futuro.</p>",
        "images": [],
        "poster": "images/movie-link/poster.webp",
        "date":"2023-08-16",
        "page": "https://movie-link-kev.netlify.app/",
        "repository": "https://github.com/KevinStockmanns/movie-link",
        "tags": {
            "tech": [1,2,9,8],
            "tags": [1,2]
        },
        "status": "Publicado",
        "color" : "#8a2be2"
    },{
        "id": 4,
        "title": "Ecommerce",
        "overview": "Plataforma web de ecommerce desarrollada con una arquitectura fullstack utilizando Java Spring Boot para el backend y Angular para el frontend.",
        "content": "<h2>Descripción del Proyecto</h2><p>Este proyecto de ecommerce fullstack está construido sobre <strong>Java Spring Boot</strong> en el backend y <strong>Angular</strong> en el frontend. La plataforma permite a los usuarios navegar y gestionar productos, realizar pedidos, y administrar cuentas de usuarios con un sistema de roles. El backend actúa como una <strong>API Rest</strong>, gestionando datos críticos como productos, versiones, usuarios y pedidos a través de una base de datos MySQL. Además, se implementa <strong>Spring Security</strong> con autenticación basada en <strong>JSON Web Token (JWT)</strong> para garantizar la integridad y el control de acceso según el rol del usuario. Para la visualización de estadísticas, se ha integrado <strong>GraphQL</strong>, proporcionando un acceso eficiente a la información relevante.</p><p>El frontend está desarrollado con <strong>Angular</strong>, gestionando múltiples rutas para ofrecer una experiencia de navegación fluida y similar a una aplicación nativa. Se emplean <strong>interceptores</strong> para optimizar las consultas a la API, gestionando la caché de manera eficiente y evitando peticiones innecesarias. También se implementa un sistema de manejo de errores para mejorar la experiencia de usuario en caso de fallos en la comunicación con el backend o la interacción con la API.</p><h2>Funcionalidades</h2><p>El proyecto incluye una variedad de funcionalidades enfocadas en ofrecer una experiencia completa tanto para usuarios como para administradores:</p><ul><li><strong>Gestión de productos:</strong> Administración de un catálogo de productos, con versiones y detalles asociados.</li>  <li><strong>Gestión de pedidos:</strong> Los usuarios pueden realizar pedidos, y el sistema permite gestionar su estado.</li>  <li><strong>Seguridad basada en roles:</strong> Autenticación y autorización de usuarios según sus roles, implementada con <strong>JWT</strong> y <strong>Spring Security</strong>.</li>  <li><strong>Visualización de estadísticas:</strong> Utilización de <strong>GraphQL</strong> para la obtención y presentación de estadísticas detalladas sobre productos y ventas.</li></ul><h2>Conclusión</h2><p>El desarrollo de esta plataforma ecommerce fullstack me permitió aplicar conocimientos avanzados en <strong>Java Spring Boot</strong> y <strong>Angular</strong>, así como abordar desafíos relacionados con la gestión de roles, validación de usuarios y el manejo eficiente de grandes volúmenes de datos a través de <strong>GraphQL</strong>. La implementación de interceptores y el manejo de errores en el frontend aseguraron una experiencia de usuario robusta y optimizada.</p>",
        "images": [],
        "poster": "images/ecommerce/poster.png",
        "date": "2024-08-31",
        "page": "",
        "repository": "",
        "tags": {
            "tech": [1, 2, 8, 9, 5, 4, 7],
            "tags": [1, 4,5,6]
        },
        "status": "En Desarrollo",
        "color": "#3498db"
    }]
}